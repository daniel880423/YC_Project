@model PoTsen.Models.AccountModel;

@{
    ViewData["Title"] = "Home Page";
}

<!DOCTYPE html>

<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.css" />
    <link rel="stylesheet" href="~/css/site.css" />

    <style>
        .login-box {
            position: absolute;
            top: 50%;
            left: 50%;
            width: 400px;
            padding: 40px;
            transform: translate(-50%, -50%);
            background: rgba(0,0,0,0.5);
            box-sizing: border-box;
            box-shadow: 0 15px 25px rgba(0,0,0,0.6);
            border-radius: 10px;
        }

        .login-box h2 {
            margin: 0 0 30px;
            padding: 0;
            color: #fff;
            text-align: center;
        }
    </style>
</head>
<body>

    @using (Html.BeginForm())  // AccountController
    {
        <div class="mb-3 mt-3">
            @{
                if (TempData["Error"] != null)
                {
                    <p style="color:red">@TempData["Error"]</p>
                }
            }
            <div class="form-group">
                <div class="col-md-12">
                    <i class="fa fa-user fa-fw text-white" aria-hidden="true"></i>
                    <label style="color:#fff">Account</label>
                    @Html.TextBoxFor(model => model.Account, new { @class = "form-control", placeholder = "Account", required = "required", autofocus = "autofocus" })
                    @Html.ValidationMessageFor(model => model.Account, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-12">
                    <i class="fa fa-lock fa-fw text-white" aria-hidden="true"></i>
                    <label style="color:#fff">Password</label>
                    @Html.PasswordFor(model => model.Password, new { @class = "form-control", autocomplete = "new-password", id = "password", @readonly = "readonly", required = "required" })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-12" id="sub">
                    <input type="submit" value="Login" class="btn btn-lg btn-primary btn-block" onclick="display_loading()" />
                </div>
            </div>
        </div>
    }
    <script>
        document.getElementById('password').onfocus = function () {
            document.getElementById('password').removeAttribute('readonly');
        };
    </script>
</body>
</html>
